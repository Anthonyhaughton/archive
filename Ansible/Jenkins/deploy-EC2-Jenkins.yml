- name: Provision EC2 instance and Install Jenkins with Nginx Proxy
  hosts: localhost
  vars:
    image_id: "ami-016eb5d644c333ccb" # replace with your preffered image
    instance_type: "t2.micro" # replace with your preferred instance type
    key_name: "ansible_keys" # replace with your preferred key pair name
    region: "us-east-1" # replace with your preferred region
    subnet_id: "subnet-08ef7b3e735fe4487" # replace with your preferred subnet
    vpc_subnet_id: "vpc-0d8933cd63859a454" # replace with your preferred subnet
    security_groups: # replace with your preferred security group IDs
      - "sg-0ac99e5a037c06194"
      - "sg-0856fb08db7b466d0"
  tasks:

    - name: Create EC2 instance
      amazon.aws.ec2_instance:
        region: "{{ region }}"
        name: "jenkins_server"
        image_id: "{{ image_id }}"
        instance_type: "{{ instance_type }}"
        key_name: "{{ key_name }}"
        security_groups: "{{ security_groups }}"
        count: 1
        wait: yes
        subnet_id: "{{ subnet_id }}"
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        filters:
          instance-state-name: running
          "tag:Name": "My EC2 Instance"
      register: running_instances

    - name: Add new host to inventory
      add_host:
        name: "{{ running_instances.instances[0].public_dns_name }}"
        groups: Jenkins
        ansible_user: ec2-user
        ansible_ssh_private_key_file: /root/.ssh/ansible_keys.pem

    - name: Wait for system to become reachable
      ansible.builtin.wait_for_connection:
        timeout: 900
      delegate_to: "{{ running_instances.instances[0].public_dns_name }}"

    - name: Set Hostname
      become: true
      ansible.builtin.hostname:
        name: Jenkins
      delegate_to: "{{ running_instances.instances[0].public_dns_name }}"

    - name: Install Java
      become: true
      yum:
        name: java-11-openjdk
        state: present
      delegate_to: "{{ running_instances.instances[0].public_dns_name }}"

    - name: Install wget
      become: true
      yum:
        name: wget
        state: present
      delegate_to: "{{ running_instances.instances[0].public_dns_name }}"

    - name: Import Jenkins GPG key
      become: true
      shell: |
        wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
        rpm --import https://pkg.jenkins.io/redhat-stable/jenkins.io-2023.key
        yum install jenkins -y
      register: jenkins_install_output
      delegate_to: "{{ running_instances.instances[0].public_dns_name }}"

    - name: Download and Install Jenkins
      become: true
      shell: |
        wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo
        yum install jenkins -y
      register: jenkins_install_output
      delegate_to: "{{ running_instances.instances[0].public_dns_name }}"

    - name: Make SELinux Pemissive
      become: true
      ansible.posix.selinux:
        policy: targeted
        state: "permissive"
      delegate_to: "{{ running_instances.instances[0].public_dns_name }}"


- name: Install and configure NginX then Start Jenkins
  hosts: Jenkins
  become: true
  remote_user: ec2-user
  vars:
    ansible_ssh_private_key_file: /root/.ssh/ansible_keys.pem
  tasks:

    - name: Install NginX
      yum:
        name: nginx
        state: present

    - name: Move Nginx file to correct directory
      template:
        src: /home/ansible/files/apps.conf
        dest: /etc/nginx/conf.d/apps.conf

    - name: restart Nginx
      service:
        name: nginx
        state: restarted

    - name: Start Jenkins service
      service:
        name: jenkins
        state: started
        enabled: true